// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ListingPage matches snapshot 1`] = `
<Page
  author="user-1 display name"
  contentType="website"
  description="listing1 description"
  facebookImages={Array []}
  schema={
    Object {
      "@context": "http://schema.org",
      "@type": "ItemPage",
      "description": "listing1 description",
      "image": "[]",
      "name": "ListingPage.schemaTitle",
    }
  }
  scrollingDisabled={false}
  title="ListingPage.schemaTitle"
  twitterImages={Array []}
>
  <LayoutSingleColumn
    className="pageRoot"
    rootClassName={null}
  >
    <LayoutWrapperTopbar
      className={null}
      rootClassName={null}
    >
      <withRouter(Connect(TopbarContainerComponent)) />
    </LayoutWrapperTopbar>
    <LayoutWrapperMain
      className="layoutWrapperMain"
      rootClassName={null}
    >
      <div>
        <div
          className="imgHeader"
        >
          <div
            className="imgHeader_h1"
          >
            <h1>
              Pole Shed, Stabling or Covered Yards
            </h1>
          </div>
          <div
            className="imgHeader_span"
          >
            <img
              className="road"
              src="test-file-stub"
            />
            <span>
              Manawatu
            </span>
            <a
              href="/s?pub_listingType=listing&address=New%20Zealand&bounds=-34.0465240000456%2C179.9%2C-52.6693956973145%2C165.770163500618"
            >
              <img
                className="backToSearch"
                src="test-file-stub"
              />
            </a>
          </div>
        </div>
        <div
          className="imageContainer"
        >
          <div
            className="mainImage"
          >
            <SectionImages
              handleViewPhotosClick={[Function]}
              imageCarouselOpen={false}
              listing={
                Object {
                  "attributes": Object {
                    "deleted": false,
                    "description": "listing1 description",
                    "geolocation": LatLng {
                      "_sdkType": "LatLng",
                      "lat": 40,
                      "lng": 60,
                    },
                    "price": Money {
                      "_sdkType": "Money",
                      "amount": 5500,
                      "currency": "USD",
                    },
                    "publicData": Object {},
                    "state": "published",
                    "title": "listing1 title",
                  },
                  "author": Object {
                    "attributes": Object {
                      "banned": false,
                      "deleted": false,
                      "profile": Object {
                        "abbreviatedName": "TT",
                        "displayName": "user-1 display name",
                      },
                    },
                    "id": UUID {
                      "_sdkType": "UUID",
                      "uuid": "user-1",
                    },
                    "type": "user",
                  },
                  "id": UUID {
                    "_sdkType": "UUID",
                    "uuid": "listing1",
                  },
                  "images": Array [],
                  "type": "listing",
                }
              }
              onImageCarouselClose={[Function]}
              onManageDisableScrolling={[Function]}
            />
          </div>
        </div>
        <div
          className="contentContainer"
        >
          <div
            className="mainContent"
          >
            <div>
              <div
                className="idealStorageTag"
              >
                <h2>
                  Ideal for storage
                </h2>
                <div>
                  <h3>
                    Owned by 
                    <span>
                      Hayden M
                    </span>
                  </h3>
                  <h3
                    className="dollar"
                  >
                    NZ $30.00/wk
                  </h3>
                </div>
              </div>
              <hr
                className="underline"
              />
              <div>
                <h3
                  className="space"
                >
                  About this page
                </h3>
                <p>
                  So many sheds, not enough of my own toys to fill them all.
                </p>
                <p>
                  Covered yard spaces, pole shedding and enclosed stabling areas available for long/short term storage of trailers, attachments, feed or other gear/equipment.
                </p>
              </div>
              <hr
                className="underline"
              />
              <div>
                <h3
                  className="space"
                >
                  Size of space
                </h3>
                <p>
                  Garage 3.6m x 6.1m
                  <br />
                  20.7m of floor space
                </p>
              </div>
              <hr
                className="underline"
              />
              <SectionFeaturesMaybe
                options={
                  Array [
                    Object {
                      "key": "feat1",
                      "label": "Feat 1",
                    },
                    Object {
                      "key": "feat2",
                      "label": "Feat 2",
                    },
                    Object {
                      "key": "feat3",
                      "label": "Feat 3",
                    },
                  ]
                }
                publicData={Object {}}
              />
              <hr
                className="underline"
              />
              <div>
                <h3
                  className="space"
                >
                  Preferred Use
                </h3>
                <div
                  className="preferredUse"
                >
                  <div
                    className="preferredUse__event"
                  >
                    <img
                      src="test-file-stub"
                    />
                    <div>
                      <span>
                        One-off events
                      </span>
                    </div>
                  </div>
                  <div
                    className="preferredUse__storage"
                  >
                    <img
                      src="test-file-stub"
                    />
                    <div>
                      <span>
                        Storage
                      </span>
                    </div>
                  </div>
                  <div
                    className="preferredUse__space"
                  >
                    <img
                      src="test-file-stub"
                    />
                    <div>
                      <span>
                        Creative space
                      </span>
                    </div>
                  </div>
                  <div
                    className="preferredUse__workshop"
                  >
                    <img
                      src="test-file-stub"
                    />
                    <div>
                      <span>
                        Workshop
                      </span>
                    </div>
                  </div>
                </div>
              </div>
              <hr
                className="underline"
              />
              <div>
                <h3
                  className="space"
                >
                  Access Frequency
                </h3>
                <p
                  id="propertyRule"
                >
                  Anytime, but by arrangement
                </p>
              </div>
              <hr
                className="underline"
              />
              <div>
                <h3
                  className="space"
                >
                  Property Rules
                </h3>
                <p
                  id="propertyRule"
                >
                  <img
                    className="smoking"
                    src="test-file-stub"
                  />
                  No Smoking
                  <br />
                  <img
                    className="smoking"
                    src="test-file-stub"
                  />
                  Pets are allowed
                </p>
              </div>
              <hr
                className="underline"
              />
              <br />
              <div>
                <withRouter(injectIntl(ContactPanel))
                  authorDisplayName="user-1 display name"
                  className="__bookingPanel"
                  editParams={
                    Object {
                      "id": "listing1",
                      "slug": "listing1-title",
                      "tab": "description",
                      "type": "edit",
                    }
                  }
                  fetchLineItemsError={null}
                  fetchLineItemsInProgress={false}
                  fetchTimeSlotsError={null}
                  isOwnListing={false}
                  lineItems={null}
                  listing={
                    Object {
                      "attributes": Object {
                        "deleted": false,
                        "description": "listing1 description",
                        "geolocation": LatLng {
                          "_sdkType": "LatLng",
                          "lat": 40,
                          "lng": 60,
                        },
                        "price": Money {
                          "_sdkType": "Money",
                          "amount": 5500,
                          "currency": "USD",
                        },
                        "publicData": Object {},
                        "state": "published",
                        "title": "listing1 title",
                      },
                      "author": Object {
                        "attributes": Object {
                          "banned": false,
                          "deleted": false,
                          "profile": Object {
                            "abbreviatedName": "TT",
                            "displayName": "user-1 display name",
                          },
                        },
                        "id": UUID {
                          "_sdkType": "UUID",
                          "uuid": "user-1",
                        },
                        "type": "user",
                      },
                      "id": UUID {
                        "_sdkType": "UUID",
                        "uuid": "listing1",
                      },
                      "images": Array [],
                      "type": "listing",
                    }
                  }
                  listingUnderEnquiry={false}
                  onFetchTransactionLineItems={[Function]}
                  onManageDisableScrolling={[Function]}
                  onSubmit={[Function]}
                  timeSlots={null}
                  title={
                    <Memo(MemoizedFormattedMessage)
                      id="ListingPage.bookingTitle"
                      values={
                        Object {
                          "title": <React.Fragment>
                            
                            listing1
                             
                            title
                            
                          </React.Fragment>,
                        }
                      }
                    />
                  }
                  unitType="line-item/night"
                />
              </div>
            </div>
          </div>
          <div>
            <div
              className="showPhotos"
            >
              <img
                src="test-file-stub"
              />
            </div>
            <withRouter(injectIntl(ContactPanel))
              authorDisplayName="user-1 display name"
              className="bookingPanel"
              editParams={
                Object {
                  "id": "listing1",
                  "slug": "listing1-title",
                  "tab": "description",
                  "type": "edit",
                }
              }
              fetchLineItemsError={null}
              fetchLineItemsInProgress={false}
              fetchTimeSlotsError={null}
              isOwnListing={false}
              lineItems={null}
              listing={
                Object {
                  "attributes": Object {
                    "deleted": false,
                    "description": "listing1 description",
                    "geolocation": LatLng {
                      "_sdkType": "LatLng",
                      "lat": 40,
                      "lng": 60,
                    },
                    "price": Money {
                      "_sdkType": "Money",
                      "amount": 5500,
                      "currency": "USD",
                    },
                    "publicData": Object {},
                    "state": "published",
                    "title": "listing1 title",
                  },
                  "author": Object {
                    "attributes": Object {
                      "banned": false,
                      "deleted": false,
                      "profile": Object {
                        "abbreviatedName": "TT",
                        "displayName": "user-1 display name",
                      },
                    },
                    "id": UUID {
                      "_sdkType": "UUID",
                      "uuid": "user-1",
                    },
                    "type": "user",
                  },
                  "id": UUID {
                    "_sdkType": "UUID",
                    "uuid": "listing1",
                  },
                  "images": Array [],
                  "type": "listing",
                }
              }
              listingUnderEnquiry={false}
              onFetchTransactionLineItems={[Function]}
              onManageDisableScrolling={[Function]}
              onSubmit={[Function]}
              timeSlots={null}
              title={
                <Memo(MemoizedFormattedMessage)
                  id="ListingPage.bookingTitle"
                  values={
                    Object {
                      "title": <React.Fragment>
                        
                        listing1
                         
                        title
                        
                      </React.Fragment>,
                    }
                  }
                />
              }
              unitType="line-item/night"
            />
            <div
              className="spaceowner"
            >
              <div
                className="spaceownercontainer"
              >
                <div
                  className="image"
                >
                  <div
                    className="_h2"
                  >
                    <h2>
                      Your space owner
                      <br />
                      <span
                        className="name"
                      >
                        Owned by 
                        <span
                          className="Name"
                        >
                          Hayden M
                        </span>
                      </span>
                    </h2>
                  </div>
                  <div
                    className="_image"
                  >
                    <img
                      src="test-file-stub"
                    />
                  </div>
                </div>
                <div>
                  <p>
                    Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet, consetetur sadipscingelitr, sed diam nonumy
                  </p>
                </div>
                <div>
                  <a
                    className="link"
                    href="/u/6405e51c-04b9-493f-814f-96c00608607b"
                  >
                    <img
                      src="test-file-stub"
                    />
                  </a>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div
          className="mapwrap"
        >
          <SectionMapMaybe
            className={null}
            geolocation={
              LatLng {
                "_sdkType": "LatLng",
                "lat": 40,
                "lng": 60,
              }
            }
            listingId={
              UUID {
                "_sdkType": "UUID",
                "uuid": "listing1",
              }
            }
            publicData={Object {}}
            rootClassName={null}
          />
        </div>
      </div>
      <injectIntl(ModalComponent)
        id="ListingPage.publishedListingModal"
        isOpen={false}
        onClose={[Function]}
        onManageDisableScrolling={[Function]}
      >
        <div>
          <h1
            className="modalTitle"
          >
            <MemoizedFormattedMessage
              id="ListingPage.publishedListingTitle"
              values={
                Object {
                  "listingType": undefined,
                }
              }
            />
          </h1>
          <div
            className="publishedListingButtonWrapper"
          >
            <MatchingListings
              listing={
                Object {
                  "attributes": Object {
                    "deleted": false,
                    "description": "listing1 description",
                    "geolocation": LatLng {
                      "_sdkType": "LatLng",
                      "lat": 40,
                      "lng": 60,
                    },
                    "price": Money {
                      "_sdkType": "Money",
                      "amount": 5500,
                      "currency": "USD",
                    },
                    "publicData": Object {},
                    "state": "published",
                    "title": "listing1 title",
                  },
                  "author": Object {
                    "attributes": Object {
                      "banned": false,
                      "deleted": false,
                      "profile": Object {
                        "abbreviatedName": "TT",
                        "displayName": "user-1 display name",
                      },
                    },
                    "id": UUID {
                      "_sdkType": "UUID",
                      "uuid": "user-1",
                    },
                    "type": "user",
                  },
                  "id": UUID {
                    "_sdkType": "UUID",
                    "uuid": "listing1",
                  },
                  "images": Array [],
                  "type": "listing",
                }
              }
              searchType="advert"
            />
          </div>
        </div>
      </injectIntl(ModalComponent)>
    </LayoutWrapperMain>
    <LayoutWrapperFooter
      className={null}
      rootClassName={null}
    >
      <injectIntl(Footer) />
    </LayoutWrapperFooter>
  </LayoutSingleColumn>
</Page>
`;
